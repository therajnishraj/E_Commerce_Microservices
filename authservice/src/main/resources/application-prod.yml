#server:
#  port: 443

spring:
  application:
    name: authservice
  datasource:
    #    url: jdbc:postgresql://localhost:5432/postgres  # Database URL for Docker
    url: jdbc:postgresql://ep-frosty-cell-a8unx7sq-pooler.eastus2.azure.neon.tech/neondb?sslmode=require
    #    username: postgres
    username: neondb_owner
    #    password: root
    password: npg_UVPp0k4HdxBq
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  # Eureka Client Configuration https://authservice-n68t.onrender.com
eureka:
  instance:
    preferIpAddress: false
    hostname: authservice-n68t.onrender.com
    non-secure-port-enabled: false
    secure-port-enabled: true
    secure-port: 443
    metadata-map:
        secure: true  # âœ… Tells Eureka that this service uses HTTPS
  client:
    serviceUrl:
      defaultZone: https://eurekaserver-4qdh.onrender.com/eureka/ # Eureka service URL for Docker/Kubernetes
    registerWithEureka: true
logging:
  file:
    name: authservice.log


  web:
    mvc:
      cors:
        mappings:
          - path: "/auth/**"
            allowedOrigins: "*"
            allowedMethods: "GET, POST, PUT, DELETE"

management:
  endpoints:
    web:
      exposure:
        include: health, info

  instance:
    metadata-map:
      secure: true

server:
  port: 8443
  ssl:
    key-store: classpath:keystore.p12
    key-store-password: Demo@123
    key-store-type: PKCS12
    key-alias: myservice
    enabled: true
