spring:
  application:
    name: orderapp

#  cloud:
#    config:
#      discovery:
#        enabled: true
#        service-id: CONFIGSERVER  # Refers to the Config Server service registered in Eureka

  # Database Configuration for Dockerized PostgreSQL
  datasource:
    #    url: jdbc:postgresql://localhost:5432/postgres  # Database URL for Docker
    url: jdbc:postgresql://ep-frosty-cell-a8unx7sq-pooler.eastus2.azure.neon.tech/neondb?sslmode=require
    #    username: postgres
    username: neondb_owner
    #    password: root
    password: npg_UVPp0k4HdxBq

  # JPA and Hibernate configurations
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

server:
  port: 8082

# Resilience4j Circuit Breaker Configurations
resilience4j:
  circuitbreaker:
    configs:
      default:
        failure-rate-threshold: 50  # Percentage of failures before tripping the circuit
        wait-duration-in-open-state: 10s  # Time to wait before retrying after the circuit is open
        sliding-window-type: COUNT_BASED  # COUNT_BASED or TIME_BASED
        sliding-window-size: 10  # Number of calls to consider for the circuit
        minimum-number-of-calls: 5  # Minimum calls before evaluating the circuit breaker
    instances:
      userServiceCircuitBreaker:
        base-config: default

# Eureka Client Configuration

eureka:
  instance:
    preferIpAddress: true
    hostname: orderservice-jf2k.onrender.com
    non-secure-port-enabled: true
    secure-port-enabled: false
    metadata-map:
      secure: false
  client:
    serviceUrl:
      defaultZone: https://eurekaserver-4qdh.onrender.com/eureka/ # Eureka service URL for Docker/Kubernetes
    registerWithEureka: true