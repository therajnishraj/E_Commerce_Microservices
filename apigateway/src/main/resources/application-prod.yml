spring:
  application:
    name: apigateway
  cloud:
    gateway:
      httpclient:
        ssl:
          useInsecureTrustManager: true # Accepts all SSL certs, needed for HTTPS in Render
      discovery:
        enabled: true  # Enables automatic service discovery via Eureka
        locator:
          enabled: true  # Enables automatic route creation based on Eureka service names
      routes:
        - id: user-service
          uri: lb://USERAPP
          predicates:
            - Path=/users/**
          filters:
            - AuthenticationFilter
            - name: CircuitBreaker
              args:
                name: globalCB
                fallbackUri: forward:/fallback/global
        - id: order-service
          uri: lb://ORDERAPP
          predicates:
            - Path=/orders/**
          filters:
            - AuthenticationFilter
            - name: CircuitBreaker
              args:
                name: globalCB
                fallbackUri: forward:/fallback/global
        - id: auth-service
          uri: lb://AUTHSERVICE
          predicates:
            - Path=/auth/**
          filters:
            - SetRequestHeader=X-Forwarded-Proto, https #AuthenticationFilter # Uncomment if needed
            - name: RewritePath
              args:
                  regexp: "/auth/(.*)"
                  replacement: "/$1"
            - name: CircuitBreaker
              args:
                name: globalCB
                fallbackUri: forward:/fallback/global
      http-client:
        response-timeout: 120000

eureka:
  instance:
    secure-port-enabled: true
    non-secure-port-enabled: false
    metadata-map:
        secure: true  # Tell Eureka that this service uses HTTPS
    preferIpAddress: true
    hostname: eurekaserver-71hf.onrender.com
  client:
    serviceUrl:
      defaultZone: https://eurekaserver-71hf.onrender.com/eureka/
    registerWithEureka: true

logging:
  file:
    name: apigateway.log
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.cloud.loadbalancer: DEBUG
    org.springframework.cloud.loadbalancer.core.LoadBalancerClient: DEBUG
    org.springframework.web.client.RestTemplate: TRACE

server:
  address: 0.0.0.0
#  port: 8080
  port: ${PORT:5000}


#filters:
#  - name: RewritePath
#    args:
#      regexp: /auth/(.*)
#      replacement: /$1
  ssl:
    enabled: true
#    key-store: classpath:keystore.jks
    key-store: file:/app/resources/keystore.jks
    key-store-password: Demo@123
    key-store-type: JKS
#    key-alias: your-key-alias

